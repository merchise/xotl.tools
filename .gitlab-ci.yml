---
stages:
  - pre-check
  - test
  - build
  - publish
  - clean up

workflow:
  auto_cancel:
    on_new_commit: interruptible
    on_job_failure: all

.x-code: &code
  - pyproject.toml
  - mypy.ini
  - requirements-dev-*.lock
  - src/**/*.py
  - tests/**/*.py
  - .gitlab-ci.yml

.x-code-and-docs: &code-and-docs
  - pyproject.toml
  - mypy.ini
  - requirements-dev-*.lock
  - src/**/*.py
  - tests/**/*.py
  - .gitlab-ci.yml
  - docs/**/*.rst
  - docs/**/*.py
  - docs/**/*.css

lint:
  interruptible: true
  image: python:3.12
  stage: test
  needs: []
  script:
    - pip install -r requirements-dev.lock
    - ruff check src/
    - ruff format --check src/
    - isort --check --diff src/
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^releases-/
      changes: *code

.run_staticcheck: &run_staticcheck
  image: python:$PYTHON
  stage: test
  cache:
    key: $CI_JOB_NAME-$PYTHON
    paths:
      - .mypy_cache/
  script:
    - pip install -r requirements-dev.lock
    - mypy --config-file mypy.ini -p xotl.tools

.run_tests: &run_tests
  image: python:$PYTHON
  stage: test
  script:
    - |
      pip install -r requirements-dev.lock
      if [ "$CASE" == "unit" ]; then
         pytest -l -q --cov=xotl.tools -n auto
      else
         pytest -n auto -l -q -k $CASE
      fi

test doctests:
  image: python:$PYTHON
  stage: test
  interruptible: true
  script:
    - pip install -r requirements-dev.lock
    - make -C docs doctest
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^releases-/
      changes: *code-and-docs
  parallel:
    matrix:
      - PYTHON: ["3.8", "3.9", "3.10", "3.11", "3.12"]

run required static checks:
  <<: *run_staticcheck
  interruptible: true
  allow_failure: true
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^releases-/
      changes: *code
  parallel:
    matrix:
      - PYTHON: ["3.8", "3.9", "3.10", "3.11", "3.12"]

tests:
  <<: *run_tests
  interruptible: true
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^releases-/
      changes: *code
  parallel:
    matrix:
      - PYTHON: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        CASE: ["unit", "greenlet"]

build:
  image: python:3.12
  stage: build
  script:
    - pip install hatch
    - hatch build
  artifacts:
    paths:
      - dist/
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(|a\d+|b\d+|rc\d+)?(\.post\d+)?$/
    - if: $CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^releases-/
      changes: *code

check signature of tag:
  image: alpine
  stage: test
  script:
    - apk add gnupg git
    - cat $GNUPG_PUBLIC_KEY_FILE | gpg --import
    - git verify-tag $CI_COMMIT_REF_NAME
  rules: &release-rules
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(|a\d+|b\d+|rc\d+)?(\.post\d+)?$/

publish in pypi:
  image: python:3.12
  variables:
    GIT_STRATEGY: none
  stage: publish
  script:
    - pip install twine
    - twine upload --skip-existing -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
  needs:
    - check signature of tag
    - build
  environment:
    name: pypi
    url: https://pypi.org/project/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME
  rules: *release-rules

.build_doc: &build_doc
  image: python:3.12
  stage: build
  cache:
    key: docs-${CI_COMMIT_REF_SLUG}
    paths:
      - docs/builds/
  script:
    - apt-get update && apt-get install -y git make
    - pip install -r requirements-dev.lock
    - make -C docs/ html
    - mkdir -p public
    - cp -r docs/build/html/* public/
  artifacts:
    paths:
      - docs/build/html
      - public/
    expire_in: 4 days
  needs: []

build documentation:
  <<: *build_doc
  interruptible: true
  needs: []
  rules:
    - if: $CI_SERVER_HOST != "gitlab.merchise.org"
      when: never
    - if: $CI_MERGE_REQUEST_IID
      changes: *code-and-docs
      variables:
        SPHINXOPTS: "-W"

pages:
  <<: *build_doc
  rules:
    - if: $CI_SERVER_HOST != "gitlab.com"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
